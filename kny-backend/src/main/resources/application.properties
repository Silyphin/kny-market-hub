# ========================================
# KNY Market Hub - Application Configuration Template
# ========================================
# Copy this file to application.properties and update the values
# DO NOT commit application.properties with real credentials to version control

# Server Configuration
server.port=8080
server.servlet.context-path=/
server.error.include-message=always
server.error.include-binding-errors=always
server.error.whitelabel.enabled=false
server.error.path=/error

# Application Configuration
spring.application.name=kny-market-hub
spring.profiles.active=dev

# ========================================
# DATABASE CONFIGURATION
# ========================================
# Update with your MySQL credentials
spring.datasource.url=jdbc:mysql://localhost:3306/kny_market_hub?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Kuala_Lumpur
spring.datasource.username=your_mysql_username_here
spring.datasource.password=your_mysql_password_here
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Connection Pool Configuration
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.connection-timeout=30000

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.open-in-view=false

# ========================================
# SECURITY CONFIGURATION
# ========================================
# Update with your preferred admin credentials
spring.security.user.name=admin
spring.security.user.password=your_admin_password_here
spring.security.user.roles=ADMIN

# ========================================
# OAUTH2 CONFIGURATION - GOOGLE
# ========================================
# Get these from Google Cloud Console
# 1. Go to https://console.cloud.google.com/
# 2. Create a new project or select existing
# 3. Enable Google+ API
# 4. Create OAuth2 credentials
# 5. Add redirect URI: http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-id=your_google_client_id_here
spring.security.oauth2.client.registration.google.client-secret=your_google_client_secret_here
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

# OAuth2 Provider Configuration - Google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v2/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=email

# ========================================
# OAUTH2 CONFIGURATION - FACEBOOK
# ========================================
# Get these from Facebook Developers
# 1. Go to https://developers.facebook.com/
# 2. Create a new app
# 3. Add Facebook Login product
# 4. Add redirect URI: http://localhost:8080/login/oauth2/code/facebook
spring.security.oauth2.client.registration.facebook.client-id=your_facebook_app_id_here
spring.security.oauth2.client.registration.facebook.client-secret=your_facebook_app_secret_here
spring.security.oauth2.client.registration.facebook.scope=email,public_profile
spring.security.oauth2.client.registration.facebook.redirect-uri=http://localhost:8080/login/oauth2/code/facebook
spring.security.oauth2.client.registration.facebook.authorization-grant-type=authorization_code

# OAuth2 Provider Configuration - Facebook
spring.security.oauth2.client.provider.facebook.authorization-uri=https://www.facebook.com/v18.0/dialog/oauth
spring.security.oauth2.client.provider.facebook.token-uri=https://graph.facebook.com/v18.0/oauth/access_token
spring.security.oauth2.client.provider.facebook.user-info-uri=https://graph.facebook.com/v18.0/me?fields=id,name,email
spring.security.oauth2.client.provider.facebook.user-name-attribute=email

# ========================================
# LOGGING CONFIGURATION
# ========================================
logging.level.com.kny=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# ========================================
# FILE UPLOAD CONFIGURATION
# ========================================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

# ========================================
# ACTUATOR CONFIGURATION
# ========================================
management.endpoints.web.exposure.include=health,info,metrics,env
management.endpoint.health.show-details=when-authorized

# ========================================
# JSON CONFIGURATION
# ========================================
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=Asia/Kuala_Lumpur
spring.jackson.default-property-inclusion=NON_NULL

# ========================================
# VALIDATION CONFIGURATION
# ========================================
spring.mvc.problemdetails.enabled=true

# ========================================
# SESSION CONFIGURATION
# ========================================
server.servlet.session.timeout=30m
server.servlet.session.cookie.name=KNYSESSIONID
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.http-only=true

# ========================================
# DEVELOPMENT CONFIGURATION
# ========================================
spring.h2.console.enabled=false
spring.sql.init.mode=never
spring.main.lazy-initialization=false

# ========================================
# JWT CONFIGURATION
# ========================================
# Generate a secure JWT secret key (minimum 256 bits)
# You can use: https://generate-random.org/string-generator to generate a secure key
app.jwt.secret=${JWT_SECRET:your_jwt_secret_key_256_bits_minimum_here}
app.jwt.expiration=86400000
app.jwt.refresh-expiration=604800000
app.jwt.issuer=kny-market-hub
app.jwt.audience=kny-users

# ========================================
# EXTERNAL APIS
# ========================================
# Google Maps API Key
# 1. Go to Google Cloud Console
# 2. Enable Maps JavaScript API and Places API
# 3. Create API key with restrictions
# 4. Add HTTP referrer restrictions for security
app.google.maps.api.key=your_google_maps_api_key_here
app.google.maps.geocoding.url=https://maps.googleapis.com/maps/api/geocode/json
app.google.maps.places.url=https://maps.googleapis.com/maps/api/place

# ========================================
# WEATHER API CONFIGURATION
# ========================================
# OpenMeteo API (Free - No API key required)
app.openmeteo.api.url=https://api.open-meteo.com/v1/forecast
app.weather.default.latitude=5.4164
app.weather.default.longitude=100.3327
app.weather.forecast.days=7
app.weather.timezone=Asia/Kuala_Lumpur

# ========================================
# FACEBOOK API CONFIGURATION
# ========================================
app.facebook.api.version=v18.0
app.facebook.graph.url=https://graph.facebook.com

# ========================================
# CORS CONFIGURATION
# ========================================
# Allow requests from React frontend (port 3000)
app.cors.allowed-origins=http://localhost:3000,http://localhost:8080,http://127.0.0.1:3000
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*
app.cors.allow-credentials=true
app.cors.max-age=3600

# ========================================
# SETUP INSTRUCTIONS:
# ========================================
# 1. Copy this file to application.properties
# 2. Replace all placeholder values (your_*_here) with actual values
# 3. DO NOT commit application.properties to version control
# 4. Add application.properties to your .gitignore file
# 5. For production, use environment variables instead of hardcoded values
#
# Required placeholders to replace:
# - your_mysql_username_here (usually 'root' for local development)
# - your_mysql_password_here (your MySQL password)
# - your_admin_password_here (choose a secure admin password)
# - your_google_client_id_here (from Google Cloud Console)
# - your_google_client_secret_here (from Google Cloud Console)
# - your_facebook_app_id_here (from Facebook Developers)
# - your_facebook_app_secret_here (from Facebook Developers)
# - your_google_maps_api_key_here (from Google Cloud Console)
# - your_jwt_secret_key_256_bits_minimum_here (generate a secure key)
#
# ========================================